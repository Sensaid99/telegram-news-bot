import os
import logging
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
load_dotenv()

# –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_DIR = Path(__file__).resolve().parent
DEBUG = os.getenv("DEBUG", "False").lower() == "true"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# Telegram
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")
ADMIN_IDS = [int(id_str) for id_str in os.getenv("ADMIN_IDS", "").split(",") if id_str.strip()]

# APIs
BINANCE_API_KEY = os.getenv("BINANCE_API_KEY")
BINANCE_API_SECRET = os.getenv("BINANCE_API_SECRET")

# Blockchain APIs
ETHERSCAN_API_KEY = os.getenv("ETHERSCAN_API_KEY")
BSCSCAN_API_KEY = os.getenv("BSCSCAN_API_KEY")
SOLSCAN_API_KEY = os.getenv("SOLSCAN_API_KEY")
TRONGRID_API_KEY = os.getenv("TRONGRID_API_KEY")

# Other Services
INVESTING_API_KEY = os.getenv("INVESTING_API_KEY")
COINMARKETCAP_API_KEY = os.getenv("COINMARKETCAP_API_KEY")
TWELVEDATA_API_KEY = os.getenv("TWELVEDATA_API_KEY")

# Database
DATABASE_URL = os.getenv("DATABASE_URL", "sqlite:///db/quantnews.db")

# Cache
CACHE_TTL = int(os.getenv("CACHE_TTL", "300"))  # 5 –º–∏–Ω—É—Ç
CACHE_ENABLED = os.getenv("CACHE_ENABLED", "True").lower() == "true"

# Market Data
UPDATE_INTERVAL = int(os.getenv("UPDATE_INTERVAL", "300"))  # 5 –º–∏–Ω—É—Ç
NOTIFICATION_DELAY = int(os.getenv("NOTIFICATION_DELAY", "60"))  # 1 –º–∏–Ω—É—Ç–∞
CALENDAR_UPDATE_INTERVAL = int(os.getenv("CALENDAR_UPDATE_INTERVAL", "3600"))  # 1 —á–∞—Å

SUPPORTED_CURRENCIES = [
    "BTC", "ETH", "BNB", "SOL", "XRP", "TRX", "TON", "SUI",
    "USDT", "USDC", "BUSD", "DAI"
]
SUPPORTED_NETWORKS = ["BTC", "ETH", "BSC", "SOL", "XRP", "TRON"]

# Technical Analysis
TA_TIMEFRAMES = ["1m", "5m", "15m", "30m", "1h", "4h", "1d", "1w"]
TA_INDICATORS = ["MA", "EMA", "RSI", "MACD", "BB"]
TA_UPDATE_INTERVAL = int(os.getenv("TA_UPDATE_INTERVAL", "900"))  # 15 –º–∏–Ω—É—Ç

# Whale Tracking
WHALE_THRESHOLD = {
    "BTC": float(os.getenv("WHALE_BTC", "100")),     # 100 BTC
    "ETH": float(os.getenv("WHALE_ETH", "1000")),    # 1000 ETH
    "BNB": float(os.getenv("WHALE_BNB", "5000")),    # 5000 BNB
    "SOL": float(os.getenv("WHALE_SOL", "50000")),   # 50000 SOL
    "XRP": float(os.getenv("WHALE_XRP", "1000000")), # 1M XRP
    "TRX": float(os.getenv("WHALE_TRX", "5000000"))  # 5M TRX
}

# Economic Calendar
CALENDAR_REGIONS = ["US", "EU", "CN", "JP", "GB"]
CALENDAR_IMPORTANCE = ["high", "medium", "low"]

# User Settings
DEFAULT_CURRENCY = "USD"
DEFAULT_TIMEZONE = "UTC"
DEFAULT_TIME_FORMAT = "24h"
DEFAULT_THEME = "light"

# Error Messages
ERROR_MESSAGES = {
    "general": "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    "api_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    "not_found": "‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.",
    "invalid_input": "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞.",
    "rate_limit": "‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    "maintenance": "üõ† –í–µ–¥—É—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
}

# Success Messages
SUCCESS_MESSAGES = {
    "alert_set": "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
    "alert_removed": "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ",
    "settings_updated": "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã",
    "subscription_success": "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞"
}

# Subscription Settings
SUBSCRIPTION_PRICE = float(os.getenv('SUBSCRIPTION_PRICE', '10.0'))  # USD
FREE_ALERTS_LIMIT = int(os.getenv('FREE_ALERTS_LIMIT', '3'))

# Alert Settings
ALERT_CHECK_INTERVAL = int(os.getenv('ALERT_CHECK_INTERVAL', '300'))  # seconds
DAILY_REPORT_TIME = os.getenv('DAILY_REPORT_TIME', '08:00')  # UTC

# Content Generation
MIN_POSTS_PER_DAY = int(os.getenv('MIN_POSTS_PER_DAY', '3'))
MAX_POSTS_PER_DAY = int(os.getenv('MAX_POSTS_PER_DAY', '5'))

# Supported Cryptocurrencies
SUPPORTED_COINS = [
    'BTC', 'ETH', 'BNB', 'SOL', 'XRP', 'ADA', 
    'AVAX', 'MATIC', 'DOT', 'LINK'
] 