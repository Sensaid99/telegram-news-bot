import logging
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from config import ADMIN_IDS
from services.macro_data import macro_data
from services.market_analysis import market_analysis
import asyncio

logger = logging.getLogger(__name__)

router = Router()

@router.message(Command("test_macro"))
async def test_macro_command(message: Message):
    """–¢–µ—Å—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö."""
    try:
        logger.info(f"Received test_macro command from user {message.from_user.id}")
        
        if message.from_user.id not in ADMIN_IDS:
            logger.warning(f"Unauthorized access attempt from user {message.from_user.id}")
            await message.reply("‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
            return
            
        logger.info("User is admin, proceeding with macro data")
        
        # –ü–æ–ª—É—á–∞–µ–º –º–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        metrics = await macro_data.get_macro_metrics()
        rates = await macro_data.get_rates()
        
        logger.info(f"Got metrics: {metrics}")
        logger.info(f"Got rates: {rates}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä—ã–Ω–∫–∞
        market_state = market_analysis.get_market_state(metrics, rates)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report = f"""üìä *–ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑*

üåç *–û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä—ã–Ω–∫–∞:* {market_state['indicator']}
‚Ä¢ –ë—ã—á—å–∏ —Ñ–∞–∫—Ç–æ—Ä—ã: {market_state['bullish_factors']}
‚Ä¢ –ú–µ–¥–≤–µ–∂—å–∏ —Ñ–∞–∫—Ç–æ—Ä—ã: {market_state['bearish_factors']}

üíµ *DXY (–ò–Ω–¥–µ–∫—Å –¥–æ–ª–ª–∞—Ä–∞):* {metrics.get('dxy', 'N/A')} {market_state['analysis']['dxy']['trend']}
‚Ä¢ {market_state['analysis']['dxy']['strength']}
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {market_state['analysis']['dxy']['change']:.2f}%

üìà *S&P 500:* {metrics.get('sp500', 'N/A')} {market_state['analysis']['sp500']['trend']}
‚Ä¢ {market_state['analysis']['sp500']['state']}
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {market_state['analysis']['sp500']['change']:.2f}%

üìä *NASDAQ:* {metrics.get('nasdaq', 'N/A')} {market_state['analysis']['nasdaq']['trend']}
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {market_state['analysis']['nasdaq']['change']:.2f}%

üìâ *VIX (–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å):* {metrics.get('vix', 'N/A')} {market_state['analysis']['vix']['trend']}
‚Ä¢ {market_state['analysis']['vix']['risk_level']} —Ä–∏—Å–∫
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {market_state['analysis']['vix']['change']:.2f}%

üè¶ *–°—Ç–∞–≤–∫–∏ –¶–ë:*
‚Ä¢ –§–†–°: {rates.get('fed', 'N/A')}%
‚Ä¢ –ï–¶–ë: {rates.get('ecb', 'N/A')}%
‚Ä¢ –ë–ê: {rates.get('boe', 'N/A')}%
‚Ä¢ –ë–Ø: {rates.get('boj', 'N/A')}%

üìà *–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Ç—Ä–µ–∂–µ—Ä–∏—Å:*
‚Ä¢ 10Y: {metrics.get('treasury_10y', 'N/A')}% {market_state['analysis']['treasuries']['trend']}
‚Ä¢ 2Y: {metrics.get('treasury_2y', 'N/A')}%
‚Ä¢ –°–ø—Ä–µ–¥: {market_state['analysis']['treasuries']['spread']:.2f}%
‚Ä¢ –ö—Ä–∏–≤–∞—è: {market_state['analysis']['treasuries']['state']}

ü™ô *–ó–æ–ª–æ—Ç–æ:* ${metrics.get('gold', 'N/A')} {market_state['analysis']['gold']['trend']}
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {market_state['analysis']['gold']['change']:.2f}%

üõ¢ *–ù–µ—Ñ—Ç—å:* ${metrics.get('crude_oil', 'N/A')} {market_state['analysis']['crude_oil']['trend']}
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {market_state['analysis']['crude_oil']['change']:.2f}%

*–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞:*
{market_state['analysis']['dxy']['impact']}

{market_state['analysis']['vix']['interpretation']}

{market_state['analysis']['treasuries']['interpretation']}
"""
        
        logger.info("Sending report...")
        await message.answer(report, parse_mode="Markdown")
        logger.info("Report sent successfully")
        
    except Exception as e:
        logger.error(f"Error in test_macro command: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.") 