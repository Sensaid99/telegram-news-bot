from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from database import get_session, User
from aiogram.utils.keyboard import InlineKeyboardBuilder
import logging

logger = logging.getLogger(__name__)
router = Router()

@router.message(Command("help"))
async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    help_text = """
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

/today - –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–≤–æ–¥–∫—É —Ä—ã–Ω–∫–∞
‚Ä¢ –¶–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
‚Ä¢ On-chain –º–µ—Ç—Ä–∏–∫–∏
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ä—ã–Ω–∫–∞
‚Ä¢ –¢–æ–ø –¥–≤–∏–∂–µ–Ω–∏—è –∑–∞ 24—á

/alerts - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω–æ–≤—ã–º–∏ –∞–ª–µ—Ä—Ç–∞–º–∏
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤
‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –∞–ª–µ—Ä—Ç–æ–≤

/test_report - –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫

üîî –ö–∞–Ω–∞–ª: @Ev_Hor
–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º: @admin

üí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /today –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä—ã–Ω–∫–µ.
"""
    await message.reply(help_text)

@router.message(Command("today"))
async def cmd_today(message: Message):
    # Get user's subscription status
    session = get_session()
    user = session.query(User).filter(User.telegram_id == message.from_user.id).first()
    is_premium = user and user.is_premium
    
    help_text = """
üìö –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/today - –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–¥–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è
/alerts - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ü–µ–Ω–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
/help - –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

‚ö°Ô∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–≤–æ–¥–∫–∏ —Ä—ã–Ω–∫–∞ (—É—Ç—Ä–æ/–≤–µ—á–µ—Ä)
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–≤–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω
‚Ä¢ On-chain –º–µ—Ç—Ä–∏–∫–∏
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫—Ä—É–ø–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤

"""
    
    if is_premium:
        help_text += """
üíé –í–∞—à –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–µ–Ω:
‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç –∞–ª–µ—Ä—Ç–æ–≤ (10)
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É
"""
    else:
        help_text += """
üíé –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–µ–º–∏—É–º:
‚Ä¢ –ë–æ–ª—å—à–µ –∞–ª–µ—Ä—Ç–æ–≤ (–¥–æ 10)
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ –ó–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /subscribe –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–µ–º–∏—É–º.
"""
    
    await message.answer(help_text)

@router.callback_query(lambda c: c.data == "menu_help")
async def show_help_menu(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ–º–æ—â–∏."""
    try:
        builder = InlineKeyboardBuilder()
        builder.button(text="üìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ", callback_data="help_guide")
        builder.button(text="‚ùì FAQ", callback_data="help_faq")
        builder.button(text="üîß –ö–æ–º–∞–Ω–¥—ã", callback_data="help_commands")
        builder.button(text="üì± –§—É–Ω–∫—Ü–∏–∏", callback_data="help_features")
        builder.button(text="‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu_main")
        builder.adjust(2, 2, 1)
        
        await callback.message.edit_text(
            "‚ÑπÔ∏è –ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏:",
            reply_markup=builder.as_markup()
        )
        
    except Exception as e:
        logger.error(f"Error in help menu: {e}")
        await callback.message.edit_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=InlineKeyboardBuilder()
            .button(text="‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu_main")
            .as_markup()
        )

@router.callback_query(lambda c: c.data == "help_guide")
async def show_guide(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    try:
        text = (
            "üìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n"
            "üîπ –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã:\n"
            "1. –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n"
            "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "3. –î–æ–±–∞–≤—å—Ç–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞\n\n"
            
            "üîπ –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:\n"
            "‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–Ω–µ—Ç–∞—Ö\n"
            "‚Ä¢ –†—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ - –æ–±–∑–æ—Ä —Ä—ã–Ω–∫–∞\n"
            "‚Ä¢ –ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏–∫–∞ - –≤–ª–∏—è–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π\n"
            "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ - –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã\n"
            "‚Ä¢ –ö–∏—Ç—ã - –∫—Ä—É–ø–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\n\n"
            
            "üîπ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–≤–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω—ã\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ–±—ä–µ–º–æ–≤ —Ç–æ—Ä–≥–æ–≤\n"
            "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∏—Ç–æ–≤\n"
            "‚Ä¢ –í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏\n\n"
            
            "üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞:\n"
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—É—é –≤–∞–ª—é—Ç—É\n"
            "‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="menu_help")
        
        await callback.message.edit_text(
            text,
            reply_markup=builder.as_markup()
        )
        
    except Exception as e:
        logger.error(f"Error showing guide: {e}")
        await callback.message.edit_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=InlineKeyboardBuilder()
            .button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="menu_help")
            .as_markup()
        )

@router.callback_query(lambda c: c.data == "help_faq")
async def show_faq(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã."""
    try:
        text = (
            "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n\n"
            
            "–í: –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?\n"
            "–û: –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.\n\n"
            
            "–í: –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–µ—Ç—É –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ?\n"
            "–û: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–≤–µ–∑–¥–æ—á–∫—É —Ä—è–¥–æ–º —Å –º–æ–Ω–µ—Ç–æ–π –≤ —Ä–∞–∑–¥–µ–ª–µ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.\n\n"
            
            "–í: –ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è?\n"
            "–û: –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Üí –í–∞–ª—é—Ç–∞.\n\n"
            
            "–í: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–∏—Ç–æ–≤?\n"
            "–û: –ë–æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∫—Ä—É–ø–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤—ã—à–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞.\n\n"
            
            "–í: –ö–∞–∫ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ?\n"
            "–û: –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É, on-chain –º–µ—Ç—Ä–∏–∫–∏ - –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.\n\n"
            
            "–í: –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π?\n"
            "–û: –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –§–∏–ª—å—Ç—Ä—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.\n\n"
            
            "–í: –û—Ç–∫—É–¥–∞ –±–µ—Ä—É—Ç—Å—è –¥–∞–Ω–Ω—ã–µ?\n"
            "–û: –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è API –≤–µ–¥—É—â–∏—Ö –±–∏—Ä–∂ –∏ –±–ª–æ–∫—á–µ–π–Ω-—ç–∫—Å–ø–ª–æ—Ä–µ—Ä–æ–≤."
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="menu_help")
        
        await callback.message.edit_text(
            text,
            reply_markup=builder.as_markup()
        )
        
    except Exception as e:
        logger.error(f"Error showing FAQ: {e}")
        await callback.message.edit_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ FAQ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=InlineKeyboardBuilder()
            .button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="menu_help")
            .as_markup()
        )

@router.callback_query(lambda c: c.data == "help_commands")
async def show_commands(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥."""
    try:
        text = (
            "üîß –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n\n"
            
            "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
            "/help - –ü–æ–º–æ—â—å\n"
            "/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n"
            
            "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:\n"
            "/p <—Å–∏–º–≤–æ–ª> - –¶–µ–Ω–∞ –º–æ–Ω–µ—Ç—ã\n"
            "/v <—Å–∏–º–≤–æ–ª> - –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤\n"
            "/c <—Å–∏–º–≤–æ–ª> - –ì—Ä–∞—Ñ–∏–∫\n"
            "/i <—Å–∏–º–≤–æ–ª> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
            
            "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:\n"
            "/alert_price <—Å–∏–º–≤–æ–ª> <—Ü–µ–Ω–∞> - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ü–µ–Ω–µ\n"
            "/alert_volume <—Å–∏–º–≤–æ–ª> <–æ–±—ä–µ–º> - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±—ä–µ–º–µ\n"
            "/alert_whale <—Å–µ—Ç—å> <—Å—É–º–º–∞> - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–∏—Ç–µ\n"
            "/alerts_list - –°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            "/alerts_clear - –û—á–∏—Å—Ç–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\n"
            
            "–ê–Ω–∞–ª–∏–∑:\n"
            "/market - –†—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑\n"
            "/macro - –ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏–∫–∞\n"
            "/ta <—Å–∏–º–≤–æ–ª> - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\n"
            "/whales <—Å–µ—Ç—å> - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∏—Ç–æ–≤\n\n"
            
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
            "/currency <–∫–æ–¥> - –ò–∑–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É\n"
            "/timezone <–∑–æ–Ω–∞> - –ò–∑–º–µ–Ω–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å\n"
            "/format <—Ñ–æ—Ä–º–∞—Ç> - –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏\n"
            "/theme <—Ç–µ–º–∞> - –°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="menu_help")
        
        await callback.message.edit_text(
            text,
            reply_markup=builder.as_markup()
        )
        
    except Exception as e:
        logger.error(f"Error showing commands: {e}")
        await callback.message.edit_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–∞–Ω–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=InlineKeyboardBuilder()
            .button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="menu_help")
            .as_markup()
        )

@router.callback_query(lambda c: c.data == "help_features")
async def show_features(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π."""
    try:
        text = (
            "üì± –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞\n\n"
            
            "üîπ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:\n"
            "‚Ä¢ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –∏ –æ–±—ä–µ–º—ã\n"
            "‚Ä¢ On-chain –º–µ—Ç—Ä–∏–∫–∏\n"
            "‚Ä¢ –ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã\n"
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö\n\n"
            
            "üîπ –†—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑:\n"
            "‚Ä¢ –û–±–∑–æ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä—ã–Ω–∫–∞\n"
            "‚Ä¢ –¢—Ä–µ–Ω–¥—ã –∏ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏\n"
            "‚Ä¢ –û–±—ä–µ–º—ã —Ç–æ—Ä–≥–æ–≤\n"
            "‚Ä¢ –†—ã–Ω–æ—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è\n\n"
            
            "üîπ –ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏–∫–∞:\n"
            "‚Ä¢ –í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏\n"
            "‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å\n"
            "‚Ä¢ –í–ª–∏—è–Ω–∏–µ –Ω–∞ –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–æ–∫\n"
            "‚Ä¢ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä—ã–Ω–∫–∞\n\n"
            
            "üîπ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑:\n"
            "‚Ä¢ –ì—Ä–∞—Ñ–∏–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤\n"
            "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã\n"
            "‚Ä¢ –£—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏/—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è\n"
            "‚Ä¢ –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∏ —Å–∏–≥–Ω–∞–ª—ã\n\n"
            
            "üîπ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–∏—Ç–æ–≤:\n"
            "‚Ä¢ –ö—Ä—É–ø–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\n"
            "‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–∏—Ä–∂\n"
            "‚Ä¢ –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–æ–≤\n"
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–≤–∏–∂–µ–Ω–∏—è—Ö\n\n"
            
            "üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
            "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            "‚Ä¢ –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã –∏ —Ñ–æ—Ä–º–∞—Ç–∞\n"
            "‚Ä¢ –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ—Ä–æ–≥–∏\n"
            "‚Ä¢ –¢–µ–º–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="menu_help")
        
        await callback.message.edit_text(
            text,
            reply_markup=builder.as_markup()
        )
        
    except Exception as e:
        logger.error(f"Error showing features: {e}")
        await callback.message.edit_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ—É–Ω–∫—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=InlineKeyboardBuilder()
            .button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="menu_help")
            .as_markup()
        ) 